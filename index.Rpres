House Prices in Rural NY (Stat2Data)
========================================================
author: Ignacio Medina de Andres
date: 07/03/2021
autosize: true
font-import: https://fonts.googleapis.com/css2?family=Abel&display=swap
font-family: 'Abel'
css: custom.css


```{r echo=FALSE}
image_url <- "https://www.neurosciencemarketing.com/wp-content/uploads/2008/04/home_for_sale_price.jpg"
```
<center><img src="`r image_url`" width="625" height="400"></center>


Data description
========================================================
transition: fade
transition-speed: slow
This Houses dataset is obtained from the Stat2Data package (more information clicking: [link](<https://cran.r-project.org/web/packages/Stat2Data/Stat2Data.pdf>))

It represents the estimated house prices for a sample of 53 houses (~~*observations*~~) in Canton NY (a small town in upstate NY). The corresponding data frame would be composed with the following five columns (~~*variables*~~).

<li class="fragment fade-in">**Price**: Estimated price (in $1,000 s)</li>
<li class="fragment fade-in">**Beds**: Number of bedrooms</li>
<li class="fragment fade-in">**Baths**: Number of bathrooms</li>
<li class="fragment fade-in">**Size**: Floor area of the house (in 1,000 square feet)</li>
<li class="fragment fade-in">**Lot**: Size of the lot (in acres)</li>


Slide With Code
========================================================
type: prompt 
incremental: false
transition: zoom

```{r echo=FALSE}
library(Stat2Data)
data(HousesNY)
data <- HousesNY
```

```{r}
summary(data)
```


Plot section 
=========================
type: sub-section
incremental: true

In this ~~sub-section~~ we are representing each variable versus the variable we want to study, **Price**.


Price - Size
========================================================
css: custom.css

```{r, include=FALSE}
library(plotly)
```

```{r echo=FALSE}
p <- plot_ly(data, x = ~Size, y = ~Price, name = 'trace 0', type = 'scatter', mode="markers", color="orange")

p <- p %>% layout(title = "Price per house size",
                  xaxis = list(title = "Size (x 1,000 square feet)"))

htmlwidgets::saveWidget(p,'plotly.html')
```

<style>
  .p_iframe iframe {
    width:100%;
    height:700px;
}
</style>

<div class="p_iframe">
<iframe frameborder="0" seamless='seamless' scrolling=no src="plotly.html"></iframe>
</div>

Price - Beds
========================================================
incremental: true

```{r, include=FALSE}
library(plotly)
```

```{r echo=FALSE}
g <- plot_ly() %>% 
  add_trace(data=data,
            y = ~Price,
            color = ~as.factor(Beds),
            type = "box") %>% 
  layout(title = "Price per number of beds",
         xaxis = list(title = "Number of beds",
                      range=c(1,7)))

htmlwidgets::saveWidget(g,'plotly2.html')
```

<div class="p_iframe">
<iframe frameborder="0" seamless='seamless' scrolling=no src="plotly2.html"></iframe>
</div>


Price - Baths
========================================================
incremental: true

```{r, include=FALSE}
library(plotly)
library(dplyr)
```

```{r echo=FALSE}
g <- plot_ly() %>% 
  add_trace(data=data,
            x = ~as.factor(Baths),
            y = ~Price,
            color = ~as.factor(Baths),
            type = 'scatter', 
            mode = 'markers',
            marker = list(size = ~Baths, 
                          opacity = 0.9)) %>% 
  layout(title = "Price per number of baths",
         xaxis = list(title = "Number of baths"))


htmlwidgets::saveWidget(g,'plotly3.html')
```

<div class="p_iframe">
<iframe frameborder="0" seamless='seamless' scrolling=no src="plotly3.html"></iframe>
</div>










